package main

import (
	"fmt"
	"sync"
)

func main() {
	PrintNumbers(10)
}

func PrintNumbers(n int) {
	chans := make([]chan struct{}, n)

	for i := range n {
		chans[i] = make(chan struct{})
	}
	var wg sync.WaitGroup

	for i := range n {
		wg.Add(1)
		go func(x int) {
			<-chans[x]
			defer wg.Done()
			fmt.Println(x + 1)

			if i+1 < n {
				close(chans[i+1])
			}
		}(i)
	}

	close(chans[0])
	wg.Wait()
}
